<?php

namespace Form;

use App\EntityManager;
use App\System;
use DateTime;
use phpDocumentor\GraphViz\Exception;
use Spot\Entity;
use Symfony\Component\HttpFoundation\Request;

class FormBuilder {

	protected $elements;
	protected $entity = null;
	/**
	 * @var Request
	 */
	protected $request;
	protected $formName = "";
	protected $formUrl;

	/**
	 * @var EntityManager
	 */
	protected $em;

	public function __construct() {
		$this->elements = [];
		$this->em       = ( new EntityManager() )->getManager();
	}


	/**
	 * @param $name
	 * @param string $type
	 * @param array $options
	 * @param null $value
	 */
	public function add( $name, $type = "string", $options = [], $value = null ) {
		$elem = [ "name" => $name, "type" => $type ];
		if ( $this->entity != null && $value == null && $this->entity->$name != null ) {
			$elem['value'] = $this->entity->$name;
		} else if ( $value != null ) {
			$elem['value'] = $value;
		}
		if ( $type == "entity" && $options['class'] === null ) {
			throw new \Exception( "Fields with entity type but no entity class given" );
		}
		if ( $type == "entity" && $options['class'] !== null && $options['target'] !== null ) {
			$repo = $this->em->getRepository( $options['class'] );
			$arr  = [];
			if ( $options['getCatListed'] ) {
				$temp = $repo->getCatListed();
				if ( $options['select-label'] !== null ) {
					$arr[0] = $options['select-label'];
				}
				foreach ( $temp as $data ) {
					$arr[ $data->id ] = $data->nom;
				}
			} else {
				if ($options['hasCustomLabel']){
					$arr[0] = $options['select-label'];
				}
				foreach ( $repo->all() as $data ) {

					$arr[ $data->id ] = $data->get( $options['target'] );

				}
			}


			$options['choice'] = $arr;
		}
		if ( $type == "select" && $options['choice'] === null ) {
			throw new \Exception( "Select type but no choice option specified" );
		}
		//option case:
		//we have a lot of option :
		/*
		 * required
		 * label
		 * has_label
		 * class (if its a entity type)
		 * empty_data
		 * mapped (should be filled with database info) by default true
		 * attr (html attributes)
		 * ---- class
		 * ---- id (default autogenerated)
		 *
		 */
		if ( $options['required'] === null ) {
			$options['required'] = true;
		}
		if ( $options['label'] === null ) {
			$options['label'] = $name;
		}
		if ( $options['has_label'] === null ) {
			$options['has_label'] = true;
		}
		if ( $options['mapped'] === null ) {
			$options['mapped'] = true;
		}
		if ( $options['attr'] === null || $options['attr']['id'] === null ) {
			$options['attr']['id'] = $name . "Id";
		}
		$elem['options'] = $options;

		array_push( $this->elements, $elem );
	}

	public function formStart() {
		return "<form method='post' action='$this->formUrl'>";
	}

	public function formSubmit( $text = null ) {
		$str = "<button type='submit' name='" . $this->formName . "Submit" . "' class='btn btn-success'>";
		if ( $text == null ) {
			$str .= "Valider";
		} else {
			$str .= $text;
		}

		$str .= "</button>";


		return $str;
	}

	public function formClose() {
		return "</form>";
	}

	public function display( $name, $inline = false, $group = true, $val1 = null ) {

		$str = "";
		foreach ( $this->elements as $elem ) {
			if ( $val1 == null ) {
			    if ($this->entity != null){

                    $val = $this->entity->get( $elem['name'] );
                }else{
			        $val = "";
                }
			} else {
				$val = $val1;
			}
			if ( $elem['name'] == $name ) {

				if ( $elem['type'] == "checkbox" || $elem['type'] == "radio" ) {

					$str .= "<div class='form-check row mb-1'>";

					$str .= "<input class='form-check-input mt-2 ";
					if ( $elem['options']['attr']['class'] !== null ) {
						$str .= $elem['options']['attr']['class'];
					}
					$str .= "' type='" . $elem['type'] . "' id='" . $elem['options']['attr']['id'] . "' name='" . $elem['name'] . "' ";
					if ( $this->entity != null && $this->entity->get( $elem['name'] ) !== null ) {
						if ( $this->entity->get( $elem['name'] ) ) {
							$str .= " checked ";
						}
					}
					foreach ( $elem['options']['attr'] as $attr => $prop ) {
						if ( $attr != 'class' && $attr != "id" ) {
							$str .= " " . $attr . "='" . $prop . "' ";
						}
					}
					$str .= ">";
					if ( $elem['options']['has_label'] ) {

						$str .= "<label class='ml-4 form-check-label' for='" . $elem['options']['attr']['id'] . "'>" . $elem['options']['label'] . "</label>";
					}
					$str .= "</div>";


				} else {
					if ( $group ) {
						$str .= "<div class='form-group ";
						if ( $inline ) {
							$str .= "row";
						}
						$str .= "'>";
					}

					if ( $elem['options']['has_label'] ) {

						$str .= " <label for='" . $elem['options']['attr']['id'] . "' ";
						if ( $inline ) {
							if ( $elem['name'] == "societyName" ) {
								$str .= "class='col-sm-3 col-form-label' ";
							} else {

								$str .= "class='col-sm-2 col-form-label' ";
							}
						}
						$str .= ">" . $elem['options']['label'] . "</label>";
					}
					if ( $elem['type'] == "text" ) {
						if ( $inline ) {
							$str .= "<div class='col-sm-10'>";
						}
						$str .= "<textarea class='form-control ";

						if ( $elem['options']['attr']['class'] !== null ) {
							$str .= $elem['options']['attr']['class'];
						}
						$str .= "' name='" . $elem['name'] . "'";
						if ( $elem['options']['attr']['placeholder'] !== null ) {
							$str .= "placeholder='" . $elem['options']['attr']['placeholder'] . "'";
						}
						$str .= " id='" . $elem['options']['attr']['id'] . "'>";
						if ( $this->entity != null && $this->entity->get( $elem['name'] ) !== null && ($elem['options']['mapped'] === null || $elem['options']['mapped'] == true)) {
							$str .= $this->entity->get( $elem['name'] );
						}

						$str .= "</textarea>";
						if ( $inline ) {
							$str .= "</div>";
						}

					} else if ( $elem['type'] == "select" || $elem['type'] == 'entity' ) {
						if ( $inline ) {
							$str .= "<div class='col-sm-10'>";
						}
						$str .= "<select class='form-control ";
						if ( $elem['options']['attr']['class'] !== null ) {
							$str .= $elem['options']['attr']['class'];
						}
						$str .= "' name='" . $elem['name'] . "' id='" . $elem['options']['attr']['id'] . "'>";
						foreach ( $elem['options']['choice'] as $key => $value ) {
							$str .= "<option value='" . $key . "'  ";
							if ( $this->entity != null && $this->entity->get( $elem['name'] ) !== null && $this->entity->get( $elem['name'] ) == $key ) {
								$str .= " selected='selected' ";
							}
							$str .= ">$value</option>";
						}
						$str .= "</select>";
						if ( $inline ) {
							$str .= "</div>";
						}
					} else {
						if ( $elem['type'] == "string" ) {
							$elem['type'] = "text";
						}
						if ( $elem['type'] == "datetime" ) {
							$elem['type'] = "datetime-local";
						}
						if ( $inline ) {
							if ( $elem['name'] == "societyName" ) {
								$str .= "<div class='col-sm-9'>";
							} else {
								$str .= "<div class='col-sm-10'>";
							}
						}
						$str .= "<input type='" . $elem['type'] . "' class='form-control ";
						if ( $elem['options']['attr']['class'] !== null ) {
							$str .= $elem['options']['attr']['class'];
						}
						$str .= "' id='" . $elem['options']['attr']['id'] . "' name='" . $elem['name'] . "' ";
						if ( $elem['options']['attr']['placeholder'] !== null ) {
							$str .= "placeholder='" . $elem['options']['attr']['placeholder'] . "'";
						}
						if ( $this->entity != null && $val !== null && ($elem['options']['mapped'] === null || $elem['options']['mapped'] === true) ) {
							if ( $elem['type'] == "datetime-local" ) {

								if ( is_string( $this->entity->get( $elem['name'] ) ) ) {
									$str .= " value='" . $this->entity->get( $elem['name'] ) . "' ";
								} else if ( $this->entity->get( $elem['name'] ) != false ) {
									$temp = $this->entity->get( $elem['name'] )->format( 'Y-m-d' ) . "T" . $this->entity->get( $elem['name'] )->format( "H:i:s" );
									$str  .= " value='" . $temp . "' ";
								}

							} else {
								$str .= " value='" . $val . "' ";
							}
						}
						$str .= ">";

						if ( $inline ) {
							$str .= "</div>";
						}

					}

					if ( $inline && $group ) {
						$str .= " </div>";
					}


				}
			}
		}
		if ( $str == "" ) {
			throw new \Exception( "Can't find this field inside the form builder" );
		}

		return $str;
	}


	public function createView( $inline = false ) {

		$str = "";
		foreach ( $this->elements as $elem ) {

			if ( $elem['type'] == "checkbox" || $elem['type'] == "radio" ) {

				$str .= "<div class='form-check row mb-1'>";
				if ( $elem['options']['attr']['data-toggle'] !== null ) {
					$str .= "<input class=' ' ";
				} else {
					$str .= "<input class='form-check-input mt-2 ";
				}
				foreach ( $elem['options']['attr'] as $attr => $prop ) {
					if ( $attr != 'class' && $attr != "id" ) {
						$str .= $attr . "='" . $prop . "' ";
					}
				}
				if ( $elem['options']['attr']['class'] !== null ) {
					$str .= $elem['options']['attr']['class'];
				}
				$str .= "' type='" . $elem['type'] . "' id='" . $elem['options']['attr']['id'] . "' name='" . $elem['name'] . "' ";

				if ( $this->entity != null && $this->entity->get( $elem['name'] ) !== null ) {
					if ( $this->entity->get( $elem['name'] ) ) {
						$str .= " checked ";
					}
				}

				$str .= ">";
				if ( $elem['options']['has_label'] ) {

					$str .= "<label class='ml-4 form-check-label' for='" . $elem['options']['attr']['id'] . "'>" . $elem['options']['label'] . "</label>";
				}
				$str .= "</div>";


			} else {
				$str .= "<div class='form-group ";
				if ( $inline ) {
					$str .= "row";
				}
				$str .= "'>";
				if ( $elem['options']['has_label'] ) {

					$str .= " <label for='" . $elem['options']['attr']['id'] . "' ";
					if ( $inline ) {
						$str .= "class='col-sm-2 col-form-label' ";
					}
					$str .= ">" . $elem['options']['label'] . "</label>";
				}
				if ( $elem['type'] == "text" ) {
					if ( $inline ) {
						$str .= "<div class='col-sm-10'>";
					}
					$str .= "<textarea class='form-control ";

					if ( $elem['options']['attr']['class'] !== null ) {
						$str .= $elem['options']['attr']['class'];
					}
					$str .= "' name='" . $elem['name'] . "' id='" . $elem['options']['attr']['id'] . "'>";
					if ( $this->entity != null && $this->entity->get( $elem['name'] ) !== null && ($elem['options']['mapped'] === null || $elem['options']['mapped'] == true) ) {
						$str .= $this->entity->get( $elem['name'] );
					}

					$str .= "</textarea>";
					if ( $inline ) {
						$str .= "</div>";
					}

				} else if ( $elem['type'] == "select" || $elem['type'] == 'entity' ) {
					if ( $inline ) {
						$str .= "<div class='col-sm-10'>";
					}
					$str .= "<select class='form-control ";
					if ( $elem['options']['attr']['class'] !== null ) {
						$str .= $elem['options']['attr']['class'];
					}
					$str .= "' name='" . $elem['name'] . "' id='" . $elem['options']['attr']['id'] . "'>";
					foreach ( $elem['options']['choice'] as $key => $value ) {
						$str .= "<option value='" . $key . "'  ";
						if ( $this->entity != null && $this->entity->get( $elem['name'] ) !== null && $this->entity->get( $elem['name'] ) == $key ) {
							$str .= " selected='selected' ";
						}
						$str .= ">$value</option>";
					}
					$str .= "</select>";
					if ( $inline ) {
						$str .= "</div>";
					}
				} else {
					if ( $elem['type'] == "string" ) {
						$elem['type'] = "text";
					}
					if ( $elem['type'] == "datetime" ) {
						$elem['type'] = "datetime-local";
					}
					if ( $inline ) {
						$str .= "<div class='col-sm-10'>";
					}
					$str .= "<input type='" . $elem['type'] . "' class='form-control ";
					if ( $elem['options']['attr']['class'] !== null ) {
						$str .= $elem['options']['attr']['class'];
					}
					$str .= "' id='" . $elem['options']['attr']['id'] . "' name='" . $elem['name'] . "' ";
					if ( $elem['options']['attr']['placeholder'] !== null ) {
						$str .= "placeholder='" . $elem['options']['attr']['placeholder'] . "'";
					}
					if ( $this->entity != null && $this->entity->get( $elem['name'] ) !== null && ($elem['options']['mapped'] === null || $elem['options']['mapped'] == true) ) {
						if ( $elem['type'] == "datetime-local" ) {

							if ( is_string( $this->entity->get( $elem['name'] ) ) ) {
								$str .= " value='" . $this->entity->get( $elem['name'] ) . "' ";
							} else if ( $this->entity->get( $elem['name'] ) != false ) {
								$temp = $this->entity->get( $elem['name'] )->format( 'Y-m-d' ) . "T" . $this->entity->get( $elem['name'] )->format( "H:i:s" );
								$str  .= " value='" . $temp . "' ";
							}

						} else {
							$str .= " value='" . $this->entity->get( $elem['name'] ) . "' ";
						}
					}
					$str .= ">";

					if ( $inline ) {
						$str .= "</div>";
					}

				}
				$str .= " </div>";
			}
		}

		return $str;
	}

	/**
	 *
	 */
	public
	function isSubmitted() {
		return $this->request->request->get( $this->formName . "Submit" ) !== null;
	}

	/**
	 *
	 */
	public
	function isValid() {
		foreach ( $this->elements as $elem ) {
			if ( $elem['options']['required'] ) {
				if ( $this->request->request->get( $elem['name'] ) == null ) {
					if ( ! $elem['type'] == "checkbox" && ! $elem['type'] == 'radio' ) {
						return false;
					}
				}
			}
		}

		return true;
	}

	/**
	 * @param Request $request
	 */
	public
	function handleRequest(
		Request $request
	) {
		$this->request = $request;
		$this->formUrl = $request->server->get( 'REQUEST_URI' );
		if ( $this->isSubmitted() && $this->isValid() ) {
			foreach ( $this->elements as $elem ) {
				if ( $elem['options']['mapped'] ) {
					if ( $elem['type'] == "datetime" || $elem['type'] == "datetime-local" ) {

						$date = ( new DateTime() )->createFromFormat( 'Y-m-d\TH:i', $request->request->get( $elem['name'] ) );
						if ( ! $date ) {

							$date = ( new DateTime() )->createFromFormat( 'Y-m-d\TH:i:s', $request->request->get( $elem['name'] ) );
						}
						$this->entity->set( $elem['name'], $date );
					} elseif ( $elem['type'] == "checkbox" || $elem['type'] == "radio" ) {
						if ( $request->request->get( $elem['name'] ) !== null ) {
							$this->entity->set( $elem['name'], true );
						} else {
							$this->entity->set( $elem['name'], false );
						}
					} else {
						$this->entity->set( $elem['name'], $request->request->get( $elem['name'] ) );
					}
				}

			}
		}
	}

	/**
	 * @param  $formTypeClass
	 * @param Entity|null $entity
	 */
	public
	function createForm(
		$formTypeClass, Entity $entity = null
	) {
		if ( $entity != null ) {
			$this->entity = $entity;
		}
		$this->formName = str_replace( "Form\\", "", $formTypeClass );
		( new $formTypeClass() )->buildForm( $this );

		return $this;
	}
}